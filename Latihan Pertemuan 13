{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP8KlqzC5YlcCdw1kJcSw0h",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nxtrizz10/DesignAnalisisAlgoritma/blob/main/Latihan%20Pertemuan%2013\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ve5VxeUWs1uy",
        "outputId": "29d83e50-8ac5-4c09-ee1d-beccad3e6bb0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Amin', 'Wasim', 'Nick', 'Mike', 'Imran', 'Faras']\n",
            "['Wasim', 'Imran', 'Amin', 'Faras', 'Nick', 'Mike']\n",
            "['Faras', 'Imran', 'Wasim', 'Amin', 'Nick', 'Mike']\n"
          ]
        }
      ],
      "source": [
        "# Implementasi Algoritma Breadth-first Search\n",
        "# O Amin ------------------------\n",
        "# |             |               |\n",
        "# O Wasim       O Nick          O Mike\n",
        "# |\n",
        "# O Imran\n",
        "# |\n",
        "# O Faras\n",
        "\n",
        "def bfs(graph,start):\n",
        "    visited = []\n",
        "    queue = []\n",
        "    queue = [start]\n",
        "    while queue:\n",
        "        node = queue.pop(0)\n",
        "        if node not in visited:\n",
        "            visited.append(node)\n",
        "            neighbours = graph[node]\n",
        "            for neighbour in neighbours:\n",
        "                queue.append(neighbour)\n",
        "    return visited\n",
        "\n",
        "graph = {'Amin' : ['Wasim', 'Nick', 'Mike'],\n",
        "         'Wasim': ['Imran', 'Amin'],\n",
        "         'Imran': ['Wasim', 'Faras'],\n",
        "         'Faras': ['Imran'],\n",
        "         'Mike': ['Amin'],\n",
        "         'Nick': ['Amin']}\n",
        "\n",
        "print(bfs(graph,'Amin'))\n",
        "print(bfs(graph,'Wasim'))\n",
        "print(bfs(graph,'Faras'))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Latihan 1\n",
        "graph={'Rektor' : {'Warek1', 'Warek2'},\n",
        "       'Warek1' : {'Rektor'},\n",
        "       'Warek2' : {'Rektor','Kaprodi1', 'Kaprodi2','Kaprodi3'},\n",
        "       'Kaprodi1' : {'Warek2','Dosen A','Dosen B','Dosen C'},\n",
        "       'Dosen A' : {'Kaprodi1'},\n",
        "       'Dosen B' : {'Kaprodi1'},\n",
        "       'Dosen C' : {'Kaprodi1'},\n",
        "       'Kaprodi2' : {'Warek2','Dosen D','Dosen E'},\n",
        "       'Dosen D' : {'Kaprodi2'},\n",
        "       'Dosen E' : {'Kaprodi2'},\n",
        "       'Kaprodi3' : {'Warek2','Dosen F','Dosen G'},\n",
        "       'Dosen F': {'Kaprodi3'},\n",
        "       'Dosen G' : {'Kaprodi3'}}\n",
        "\n",
        "print(bfs(graph, 'Rektor'))\n",
        "print(bfs(graph, 'Dosen B'))\n",
        "print(bfs(graph, 'Kaprodi2'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ncgdq9M3uu4N",
        "outputId": "9ba54c7f-7f52-44ec-d2f9-9073094d35ec"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Rektor', 'Warek1', 'Warek2', 'Kaprodi1', 'Kaprodi2', 'Kaprodi3', 'Dosen C', 'Dosen A', 'Dosen B', 'Dosen E', 'Dosen D', 'Dosen F', 'Dosen G']\n",
            "['Dosen B', 'Kaprodi1', 'Dosen C', 'Warek2', 'Dosen A', 'Rektor', 'Kaprodi2', 'Kaprodi3', 'Warek1', 'Dosen E', 'Dosen D', 'Dosen F', 'Dosen G']\n",
            "['Kaprodi2', 'Dosen E', 'Warek2', 'Dosen D', 'Rektor', 'Kaprodi1', 'Kaprodi3', 'Warek1', 'Dosen C', 'Dosen A', 'Dosen B', 'Dosen F', 'Dosen G']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Implementasi Algoritma Depth First Search\n",
        "#O Amin -----------\n",
        "#|        |       |\n",
        "#O Wasim  O Nick  O Mike\n",
        "#|\n",
        "#O Imran\n",
        "#|\n",
        "#O Faras\n",
        "\n",
        "def dfs(graph, start, visited=None):\n",
        "  if visited is None:\n",
        "    visited = set()\n",
        "  visited.add(start)\n",
        "  print(start)\n",
        "  for next in graph[start] - visited:\n",
        "    dfs(graph, next, visited)\n",
        "  return visited\n",
        "\n",
        "graph={ 'Amin' : {'Wasim', 'Nick', 'Mike'},\n",
        "       'Wasim' : {'Imran', 'Amin'},\n",
        "       'Imran' : {'Wasim','Faras'},\n",
        "       'Faras' : {'Imran'},\n",
        "       'Mike' : {'Amin'},\n",
        "       'Nick' : {'Amin'}}\n",
        "print(dfs(graph, 'Amin'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "enocHpUr9T-Z",
        "outputId": "f31823ee-e37d-47fa-a5b2-2852941d5dca"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Amin\n",
            "Nick\n",
            "Mike\n",
            "Wasim\n",
            "Imran\n",
            "Faras\n",
            "{'Nick', 'Faras', 'Imran', 'Wasim', 'Amin', 'Mike'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(dfs(graph,'Wasim'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AQzzB8uV-Zqi",
        "outputId": "6905113e-e3e3-45f1-f6cc-690ed222989b"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Wasim\n",
            "Imran\n",
            "Faras\n",
            "Amin\n",
            "Nick\n",
            "Mike\n",
            "{'Nick', 'Faras', 'Imran', 'Wasim', 'Amin', 'Mike'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(dfs(graph, 'Faras'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1euGfb2G-d9O",
        "outputId": "03d64e5d-7d38-4989-d470-dd10ec38b41f"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Faras\n",
            "Imran\n",
            "Wasim\n",
            "Amin\n",
            "Nick\n",
            "Mike\n",
            "{'Nick', 'Faras', 'Imran', 'Wasim', 'Amin', 'Mike'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(dfs(graph, 'Nick'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CTriw-vu-hQi",
        "outputId": "9be3e974-779e-47ec-d211-d8be72771bc1"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Nick\n",
            "Amin\n",
            "Mike\n",
            "Wasim\n",
            "Imran\n",
            "Faras\n",
            "{'Nick', 'Faras', 'Imran', 'Wasim', 'Amin', 'Mike'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Latihan 2\n",
        "graph={'Rektor' : {'Warek1', 'Warek2'},\n",
        "       'Warek1' : {'Rektor'},\n",
        "       'Warek2' : {'Rektor','Kaprodi1', 'Kaprodi2','Kaprodi3'},\n",
        "       'Kaprodi1' : {'Warek2','Dosen A','Dosen B','Dosen C'},\n",
        "       'Dosen A' : {'Kaprodi1'},\n",
        "       'Dosen B' : {'Kaprodi1'},\n",
        "       'Dosen C' : {'Kaprodi1'},\n",
        "       'Kaprodi2' : {'Warek2','Dosen D','Dosen E'},\n",
        "       'Dosen D' : {'Kaprodi2'},\n",
        "       'Dosen E' : {'Kaprodi2'},\n",
        "       'Kaprodi3' : {'Warek2','Dosen F','Dosen G'},\n",
        "       'Dosen F': {'Kaprodi3'},\n",
        "       'Dosen G' : {'Kaprodi3'}}\n",
        "\n",
        "print(dfs(graph, 'Rektor'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bCWm293e-tMo",
        "outputId": "f3578097-7fa0-4b39-c8c0-eeacbfb19134"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rektor\n",
            "Warek1\n",
            "Warek2\n",
            "Kaprodi2\n",
            "Dosen E\n",
            "Dosen D\n",
            "Kaprodi1\n",
            "Dosen C\n",
            "Dosen A\n",
            "Dosen B\n",
            "Kaprodi3\n",
            "Dosen F\n",
            "Dosen G\n",
            "{'Dosen E', 'Warek1', 'Kaprodi3', 'Dosen A', 'Rektor', 'Kaprodi2', 'Dosen G', 'Dosen B', 'Dosen F', 'Kaprodi1', 'Warek2', 'Dosen D', 'Dosen C'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def bfs(graph,start):\n",
        "    visited = []\n",
        "    queue = []\n",
        "    queue = [start]\n",
        "    while queue:\n",
        "        node = queue.pop(0)\n",
        "        if node not in visited:\n",
        "            visited.append(node)\n",
        "            neighbours = graph[node]\n",
        "            for neighbour in neighbours:\n",
        "                queue.append(neighbour)\n",
        "    return visited\n",
        "\n",
        "graph = { '0': ['9', '7', '11'],\n",
        "          '9': ['0', '10', '8'],\n",
        "          '7': ['0', '11', '3', '6'],\n",
        "          '11': ['0', '7'],\n",
        "          '10': ['9', '1'],\n",
        "          '8': ['9', '1', '12'],\n",
        "          '1': ['10', '8'],\n",
        "          '12': ['8', '2'],\n",
        "          '3': ['7', '2', '4'],\n",
        "          '6': ['7', '5'],\n",
        "          '2': ['12', '3'],\n",
        "          '4': ['3'],\n",
        "          '5': ['6']}\n",
        "\n",
        "print(bfs(graph, '0'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JnkDYRonOnvd",
        "outputId": "f3d8696c-7d2e-4cf2-f5fc-3ef9a747bd7e"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['0', '9', '7', '11', '10', '8', '3', '6', '1', '12', '2', '4', '5']\n"
          ]
        }
      ]
    }
  ]
}